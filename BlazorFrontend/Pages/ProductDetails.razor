@page "/product/{productNumber}/{productName}"
@using BlazorFrontend.Services
@using Labb2Webb.Shared.DTOs
@inject ProductService ProductService
@inject CartService CartService
@inject NavigationManager Navigation

<h3>@product?.ProductName</h3>

@if (product == null)
{
    <p>Loading...</p>
}
else
{
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">@product.ProductName</h5>
            <p class="card-text">@product.ProductDescription</p>
            <p><strong>Price:</strong> $@product.Price</p>
            <p><strong>Status:</strong> @GetStatusText()</p>
            <button class="@GetButtonClass()" disabled="@IsButtonDisabled()" @onclick="AddToCart">@GetButtonText()</button>
        </div>
    </div>
}

@code {
    [Parameter] public string ProductNumber { get; set; }
    [Parameter] public string ProductName { get; set; }
    private ProductDto product;


    private string GetButtonClass() =>
        product.Status switch
        {
            ProductStatus.Discontinued => "btn btn-danger",
            ProductStatus.Out_Of_Stock => "btn btn-secondary",
            _ => "btn btn-success"
        };

    private string GetStatusText() =>
    product.Status switch
    {
        ProductStatus.Discontinued => "Discontinued",
        ProductStatus.Out_Of_Stock => "Out of stock",
        _ => "In stock"
    };
    private string GetButtonText() =>
    product.Status switch
    {
        ProductStatus.Discontinued => "Discontinued",
        ProductStatus.Out_Of_Stock => "Out of stock",
        _ => "Add to cart"
    };

    private bool IsButtonDisabled() =>
    product.Status != ProductStatus.In_Stock;


    protected override async Task OnParametersSetAsync()
    {
        product = await ProductService.GetProductByNameAsync(ProductNumber, ProductName);
    }

    private void AddToCart()
    {
        CartService.AddToCart(product);
    }
}