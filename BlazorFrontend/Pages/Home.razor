@page "/"
@using Labb2Webb.Shared.DTOs
@inject ProductService ProductService

<PageTitle>ynet</PageTitle>

<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
        <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
        <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
    </ol>
    <div class="carousel-inner">
        <div class="carousel-item active">
            <img class="d-block w-100" src="images/geforce-rtx-5090-bm-xl770-d.jpg" alt="First slide">
        </div>
        <div class="carousel-item">
            <img class="d-block w-100" src="images/6905530_0.webp" alt="Second slide">
        </div>
    </div>
    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
    </a>
</div>

@* TODO: Add method to list 5-10 random items from the DB, Make these clickable so we can navigate to them instantly
 *@

@if (products == null)
{
    <p>Laddar produkter...</p>
}
else
{
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var product in products)
        {
            <div class="col">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title">@product.ProductName</h5>
                        <p class="card-text">
                            <strong>Price:</strong> $@product.Price 
                            <br />
                            @product.ProductDescription
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private IEnumerable<ProductDto> products;

    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetAllProductsAsync();
    }
}

