@page "/admin/customer/{Email}"
@using Labb2Webb.Shared.DTOs
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Labb2Webb.Shared.Helpers
@inject HttpClient HttpClient

@attribute [Authorize(Roles = "Admin")]

<AuthorizeView Roles="Admin" Context="auth">
    <Authorized>
<h3>Customer Profile</h3>

	@if (customer == null)
        {
            <p><em>Loading...</em></p>
        }
        else 
        {
            <div class="card p-3">
                <h5>@customer.FirstName @customer.LastName</h5>
                <p>Email: @customer.Email</p>
                <p>Address: @customer.Address</p>
                <p>Cellphone: @customer.Cellphone</p>
            </div>

            <div class="pt-5 d-flex justify-content-center">
                <h2>Order History</h2>
            </div>
            @if (orders == null)
            {
                <p><em>Loading orders...</em></p>
            } else if(!orders.Any()){
                <p>This customer hasn't placed any orders yet</p>
            } else
            {
                <div class="accordion" id="orderAccordion">
                    @foreach (var order in orders.OrderByDescending(o => o.OrderDate))
                    {
                        var headingId = $"heading-{order.Id}";
                        var collapseId = $"collapse-{order.Id}";
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="@headingId">
                                <button class="accordion-button collapsed" type="button"
                                data-bs-toggle="collapse" data-bs-target="#@collapseId"
                                aria-expanded="false" aria-controls="@collapseId">
                                    <strong>  Order #@order.Id - @order.OrderDate.ToString("g")
                                        <span class="ms-3 badge @OrderStatusHelper.GetStatusClass(order.Status)">@order.Status</span>
                                    </strong>
                                </button>
                            </h2>
                            <strong class="d-flex justify-content-end pe-5 mt-2">Total: $@(order.OrderItems.Sum(i => i.Price* i.Amount))</strong>
                            <div id="@collapseId" class="accordion-collapse collapse"
                            aria-labelledby="@headingId" data-bs-parent="#orderAccordion">
                                <div class="accordion-body">
                                    <ul class="list-group">
                                        @foreach (var item in order.OrderItems)
                                        {
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                <span>@item.ProductName</span>
                                                <span>x @item.Amount</span>
                                                <span>$@(item.Price* item.Amount)</span>
                                            </li>
                                        }
                                    </ul>

                                </div>
                            </div>
                        </div>
                    }
                </div>

            }
        }

    </Authorized>
    <NotAuthorized>
        <h4>Access Denied</h4>
        <p>You are not authorized to access this area.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter] public string Email { get; set; }
    private CustomerDto customer;
    private IEnumerable<OrderDto> orders; 

    protected override async Task OnInitializedAsync()
    {
        try
        {
            customer = await HttpClient.GetFromJsonAsync<CustomerDto>($"api/customer/{Email}");
            orders = await HttpClient.GetFromJsonAsync<List<OrderDto>>($"api/order/customer?email={Email}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Failed to load customer or order data: {ex.Message}");
        }
    }
}
