@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@page "/admin"

<AuthorizeView Roles="Admin" Context="auth">
    <Authorized>
<h3 class="d-flex justify-content-center pt-5 pb-3">Admin Controller</h3>

<div class="row row-cols-1 row-cols-md-3 g-4">

    <div class="col" @onclick="@(() => Navigation.NavigateTo("admin/products"))">
    <div class=" card h-100" style="cursor: pointer;">
        <div class="card-body">
            <h5 class="card-title">Products</h5>
            <p class="card-text">Create or Edit Products</p>
        </div>
    </div>
</div>
            <div class="col" @onclick="@(() => Navigation.NavigateTo("admin/customers"))">
                <div class=" card h-100" style="cursor: pointer;">
                    <div class="card-body">
                        <h5 class="card-title">Customers</h5>
                        <p class="card-text">List of customers</p>
                    </div>
                </div>
            </div>
            <div class="col" @onclick="@(() => Navigation.NavigateTo("admin/orders"))">
                <div class=" card h-100" style="cursor: pointer;">
                    <div class="card-body">
                        <h5 class="card-title">Orders</h5>
                        <p class="card-text">List of all orders</p>
                    </div>
                </div>
            </div>
</div>
	</Authorized>
	<NotAuthorized>
		<h4>Access Denied</h4>
		<p>You are not authorized to access this area.</p>
	</NotAuthorized>
</AuthorizeView>
@code {
    [Inject] private AuthenticationStateProvider AuthProvider { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity.IsAuthenticated || !user.IsInRole("Admin"))
        {
            Navigation.NavigateTo("/not-authorized");
        }
    }
}
